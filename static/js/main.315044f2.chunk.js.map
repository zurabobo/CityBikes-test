{"version":3,"sources":["images/bikes-logo.svg","components/Header/Header.js","redux/actions/actionTypes.ts","redux/actions/actionCreator.ts","components/Cities/Cities.tsx","components/Preloader/Preloader.js","components/CitiesTitle/CitiesTitle.tsx","components/CitiesList/CitiesList.tsx","components/Stations/Stations.tsx","components/StationsTitle/StationsTitle.tsx","components/StationsList/StationsList.tsx","components/Main/Main.js","components/App/App.tsx","redux/reducers/stationReducer.ts","redux/reducers/rootReducer.ts","index.tsx"],"names":["Header","className","alt","src","BikesLogo","SET_NETWORK","setNetwork","network","type","payload","getStation","id","dispatch","a","fetch","res","json","Cities","location","index","stationId","useDispatch","city","country","initState","useState","isActive","setActive","useEffect","handleChangeActive","evt","stopPropagation","tabIndex","onClick","company","stations","onFocus","onBlur","Preloader","CitiesTitle","useSelector","state","length","toString","CitiesList","networks","setNetworks","getCityBikesCities","map","Stations","station","isLiked","setIsLiked","stationLikeBtnClassName","viewBox","d","StationsTitle","StationList","name","Main","App","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.315044f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bikes-logo.c28e18a6.svg\";","import React from 'react';\nimport BikesLogo from '../../images/bikes-logo.svg';\nimport './Header.css';\n\nfunction Header() {\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <h1 className=\"header__title header__title-shadow\">CityBikes</h1>\n        <img alt=\"логотип spacex\" className=\"header__logo\" src={BikesLogo} />\n      </div>\n    </header>\n  )\n}\n\nexport default Header;\n","export const SET_NETWORK = 'SET_NETWORK'","// import { SET_NETWORK} from \"./actionTypes\";\n// import {NetworkActionType, Network} from \"../reduxTypes\";\n\n\n// export const setNetwork = (network: Network): NetworkActionType => {\n//   return {\n//     type: SET_NETWORK,\n//     payload: network\n//   }\n// }\n\n// export const getStation = (id: string) => {\n\n//   return async (dispatch:any) => {\n//     try {\n//       const res = await fetch(`https://api.citybik.es/v2/networks/${id}`)\n//       const { network } = await res.json()\n//       //localStorage.setItem(\"network\", JSON.stringify(network))\n//       dispatch( setNetwork(network) )\n//     } catch (e) {}\n//   }\n// }\n\nimport { SET_NETWORK} from \"./actionTypes\";\nimport {NetworkActionType, Network} from \"../reduxTypes\";\n\n\nexport const setNetwork = (network: Network): NetworkActionType => {\n  return {\n    type: SET_NETWORK,\n    payload: network\n  }\n}\n\nexport const getStation = (id: string) => {\n\n  return async (dispatch:any) => {\n    try {\n      const res = await fetch(`https://api.citybik.es/v2/networks/${id}`)\n      const { network } = await res.json()\n      //localStorage.setItem(\"network\", JSON.stringify(network))\n      dispatch( setNetwork(network) )\n    } catch (e) {}\n  }\n}\n\nexport const saveStation = (id: string) => {\n\n  return async (dispatch:any) => {\n    try {\n      const res = await fetch(`https://api.citybik.es/v2/networks/${id}`)\n      const { network } = await res.json()\n      localStorage.setItem(\"network\", JSON.stringify(network))\n      dispatch( setNetwork(network) )\n    } catch (e) {}\n  }\n}","// import React from 'react';\n\n\n// const Cities = ( { location }) => {\n\n//   const { city, country} = location\n\n//   return (\n//     <li className=\"cities-list__item\" tabIndex={0}>{`${city}: ${country}`}</li>\n//   )\n// }\n\n// export default Cities;\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { getStation, setNetwork } from \"../../redux/actions/actionCreator\";\n\ninterface ICityType {\n  index?: number,\n  location: {\n    city: string,\n    country: string,\n    [propName: string]: any\n  },\n  stationId: string\n}\n\nconst Cities = ({ location, index, stationId }: ICityType) => {\n\n  const dispatch = useDispatch()\n\n  const { city, country } = location\n  const initState = index === 0\n  const [isActive, setActive] = useState(false)\n\n  useEffect(() => {\n    initState && dispatch(getStation(stationId))\n  }, [])\n\n  const handleGetStation = (evt: React.MouseEvent<HTMLLIElement>) => {\n    evt.stopPropagation()\n\n    if (isActive) {\n      dispatch(setNetwork({ company: [], stations: [] }))\n      dispatch(getStation(stationId))\n    }\n  }\n\n  const handleChangeActive = (evt: React.FocusEvent) => {\n    evt.stopPropagation()\n    setActive(!isActive)\n  }\n\n  return (\n    <li className=\"cities-list__item\"\n      tabIndex={0}\n      onClick={handleGetStation}\n      onFocus={handleChangeActive}\n      onBlur={handleChangeActive}\n    >{`${city}: ${country}`}</li>\n  )\n}\n\nexport default Cities","import React from 'react'\nimport './Preloader.css'\n\nconst Preloader = () => {\n    return (\n        <div className=\"preloader\">\n            <div className=\"preloader__container\">\n                <span className=\"preloader__round\"></span>\n            </div>\n        </div>\n    )\n};\n\nexport default Preloader\n","// import React from 'react';\n// import './Title.css';\n\n// function Title({ title }) {\n//   return (\n//     <h2 className=\"title\">{title}</h2>\n//   )\n// }\n\n// export default Title;\n\n\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Network } from \"../../redux/reduxTypes\";\nimport { AppState } from \"../../redux/reducers/rootReducer\";\nimport Preloader from '../Preloader/Preloader';\nimport './CitiesTitle.css';\n\n\nfunction CitiesTitle() {\n\n  const { company, location } = useSelector<AppState, Network>(state => state.network)\n\n  return (\n    <>\n      {\n        company.length !== 0 ?          \n            <h2 className=\"cities-title\">{`${company.toString()} - ${location?.city} - ${location?.country}`}</h2>\n           : <Preloader />\n      }\n    </>\n  )\n}\n\nexport default CitiesTitle;","// import React from 'react';\n// import './CitiesList.css';\n// import Title from '../Title/Title';\n// import Preloader from '../Preloader/Preloader';\n// import Cities from '../Cities/Cities';\n// import citiesApi from '../../utils/CitiesApi';\n// // const [CitiesData, setCitiesData] = React.useState({\n// //   company: data.company || 'No data available',\n// //   country: data.country || 'No data available',\n// //   city: data.city || 'No data available',\n// //   id: data.id,\n// // })\n\n\n\n// function CitiesList() {\n\n//   const [networks, setNetworks] = React.useState([])\n\n//   const getCities = async () => {\n//     const res = await fetch('https://api.citybik.es/v2/networks?fields=id,company,location')\n//     const { networks } = await res.json()\n//     //localStorage.setItem(\"networks\", JSON.stringify(networks))\n//     setNetworks(networks)\n//   }\n\n//   React.useEffect(() => {\n//     getCities()\n//   }, [])\n\n//   return (\n//     <div className=\"cities\">\n//       {/* <Title company={network.company} /> */}\n//       <div className=\"cities-list__container\">\n//         <ul className=\"cities-list\">\n//           {networks.length !== 0 ?\n//             networks.map((network, index) => (\n//               <Cities\n//                 location={network.location}\n//                 key={index}\n//               />\n//             )) : <Preloader />\n//           }\n//         </ul>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default CitiesList;\n\n\nimport React, { useEffect, useState } from 'react';\nimport './CitiesList.css';\nimport Cities from '../Cities/Cities';\nimport CitiesTitle from '../CitiesTitle/CitiesTitle';\nimport Preloader from '../Preloader/Preloader';\n\ninterface INetwork {\n  company: string[],\n  id: string,\n  location: {\n    city: string,\n    country: string,\n    [propName: string]: any\n  }\n}\n\n\nconst CitiesList = () => {\n  const [networks, setNetworks] = useState<INetwork[]>([])\n\n  const getCityBikesCities = async () => {\n    const res = await fetch('https://api.citybik.es/v2/networks?fields=id,company,location')\n    const { networks } = await res.json()\n    setNetworks(networks)\n  }\n\n\n  useEffect(() => {\n    getCityBikesCities()\n  }, [])\n\n\n  return (\n    <div className=\"cities\">\n      <CitiesTitle />\n      <div className=\"cities-list__container\">\n        <ul className=\"cities-list\">\n          {networks.length !== 0 ?\n            networks.map((network, index) => (\n              <Cities\n                key={index}\n                location={network.location}\n                index={index}\n                stationId={network.id}\n              />\n            ))\n            : <Preloader />\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default CitiesList\n","import React, { useState } from 'react';\nimport './Stations.css';\n\ntype Station = {\n  station: string\n}\n\nfunction Stations({ station }: Station) {\n\n  const [isLiked, setIsLiked] = useState(false)\n\n  const stationLikeBtnClassName = `${isLiked ? \"station__favorite-btn station__favorite-btn_active\" : \"station__favorite-btn\"}`;\n\n  const handleLikeStation = (): void => {\n    setIsLiked(!isLiked)\n  }\n\n  return (\n    <li className=\"station__item\">{station}\n      <div className={stationLikeBtnClassName} onClick={handleLikeStation}>\n        <svg viewBox=\"0 0 18 18\">\n          <path d=\"M6.555,12.558c-0.098,0-0.195-0.034-0.273-0.103c-0.233-0.2-5.718-4.954-6.199-7.885\n        C-0.133,3.243,0.071,2.201,0.69,1.474C1.22,0.85,2.034,0.507,2.982,0.507c0.082,0,0.165,0.002,0.247,0.008\n        c0.058-0.003,0.115-0.004,0.172-0.004c1.048,0,2.343,0.461,3.109,2.421c0.43-1.196,1.311-2.417,3.328-2.417\n        c1.135,0,2.023,0.342,2.571,0.987c0.597,0.701,0.787,1.733,0.569,3.068c-0.479,2.929-5.918,7.684-6.149,7.884\n        C6.751,12.524,6.653,12.558,6.555,12.558z\"/>\n        </svg>\n      </div>\n    </li>\n  )\n}\n\nexport default Stations\n\n// import React, { useState } from 'react';\n// import './Stations.css';\n\n\n\n// type Station = {\n//   station: string,\n//   isSavedStations: string, \n//   likedStations: string, \n//   onSaveStation: string, \n//   onDeleteSavedStation: string,\n// }\n\n// function Stations({ station,  isSavedStations, likedStations, onSaveStation, onDeleteSavedStation }: Station) {\n\n//   //const [isLiked, setIsLiked] = useState(false)\n//   const isLiked = !isSavedStations && likedStations(station)\n//   //const [saveStation, setSavedStation] = useState([])\n\n//   const stationLikeBtnClassName = `${isLiked ? \"station__favorite-btn station__favorite-btn_active\" : \"station__favorite-btn\"}`;\n//   const handleSaveStationClick = () => {\n//     onSaveStation({\n//       name: station.name,\n//       isSaved: station.isSaved,\n//     })\n//   }\n\n//   function handleDeleteClick() {\n//     onDeleteSavedStation(station);\n//   }\n\n//   // const handleToggleSave = (): void => {\n//   //   //const newStation = [newStation.station, ...station]\n//   //   //const clickedMovie = isLiked;\n//   //   if (!isLiked) {\n     \n//   //     localStorage.setItem(\"stations\", JSON.stringify([station]))\n//   //     setIsLiked(!isLiked)\n//   //     setSavedStation(saveStation);\n//   //   } else {\n//   //     setIsLiked(false);\n//   //   }\n//   // }\n\n//   // const handleLikeStation = (): void => {\n//   //   setIsLiked(!isLiked)\n//   // }\n\n//   return (\n//     <li className=\"station__item\">{station}\n//     {!isSavedStations ? (\n//       <div className={stationLikeBtnClassName} onClick={handleDeleteClick}>\n//         <svg viewBox=\"0 0 18 18\">\n//           <path d=\"M6.555,12.558c-0.098,0-0.195-0.034-0.273-0.103c-0.233-0.2-5.718-4.954-6.199-7.885\n//         C-0.133,3.243,0.071,2.201,0.69,1.474C1.22,0.85,2.034,0.507,2.982,0.507c0.082,0,0.165,0.002,0.247,0.008\n//         c0.058-0.003,0.115-0.004,0.172-0.004c1.048,0,2.343,0.461,3.109,2.421c0.43-1.196,1.311-2.417,3.328-2.417\n//         c1.135,0,2.023,0.342,2.571,0.987c0.597,0.701,0.787,1.733,0.569,3.068c-0.479,2.929-5.918,7.684-6.149,7.884\n//         C6.751,12.524,6.653,12.558,6.555,12.558z\"/>\n//         </svg>\n//       </div>\n//     ) : (\n//       <div className={stationLikeBtnClassName} onClick={handleSaveStationClick}>\n//         <svg viewBox=\"0 0 18 18\">\n//           <path d=\"M6.555,12.558c-0.098,0-0.195-0.034-0.273-0.103c-0.233-0.2-5.718-4.954-6.199-7.885\n//         C-0.133,3.243,0.071,2.201,0.69,1.474C1.22,0.85,2.034,0.507,2.982,0.507c0.082,0,0.165,0.002,0.247,0.008\n//         c0.058-0.003,0.115-0.004,0.172-0.004c1.048,0,2.343,0.461,3.109,2.421c0.43-1.196,1.311-2.417,3.328-2.417\n//         c1.135,0,2.023,0.342,2.571,0.987c0.597,0.701,0.787,1.733,0.569,3.068c-0.479,2.929-5.918,7.684-6.149,7.884\n//         C6.751,12.524,6.653,12.558,6.555,12.558z\"/>\n//         </svg>\n//       </div>\n//     )}\n//     </li>\n//   )\n// }\n\n// export default Stations\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Network } from \"../../redux/reduxTypes\";\nimport { AppState } from \"../../redux/reducers/rootReducer\";\nimport Preloader from '../Preloader/Preloader';\nimport './StationsTitle.css';\n\n\nfunction StationsTitle() {\n\n  const { company, stations } = useSelector<AppState, Network>(state => state.network)\n\n  return (\n    <>\n      {\n        company.length !== 0 ?\n          <>\n            <h2 className=\"stations-title\">{`Number of stations - ${stations.length}`}</h2>\n          </> : <Preloader />\n      }\n    </>\n  )\n}\n\nexport default StationsTitle;","import React from 'react';\nimport './StationsList.css';\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../redux/reducers/rootReducer\";\nimport { Network } from \"../../redux/reduxTypes\";\nimport Stations from '../Stations/Stations';\nimport Preloader from '../Preloader/Preloader';\nimport StationsTitle from '../StationsTitle/StationsTitle';\n\nfunction StationList() {\n\n  const { stations, company } = useSelector<AppState, Network>(state => state.network)\n\n  return (\n    <div className=\"station\">\n      <StationsTitle />\n      <div className=\"station-list__container\">\n        {\n          company.length !== 0 ?\n            <ul className=\"station-list\">\n              {\n                stations.length !== 0 &&\n                stations.map((station, index) => (\n                  <Stations\n                    key={index}\n                    station={station.name}\n                  />\n                ))\n              }\n            </ul> : <Preloader />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default StationList","import React from 'react';\n\nimport './Main.css';\nimport CitiesList from '../CitiesList/CitiesList';\nimport StationList from '../StationsList/StationsList';\n\n\nfunction Main() {\n  return (\n      <section className=\"main\">\n        <CitiesList />\n        <StationList />\n      </section>\n  )\n}\n\nexport default Main;\n","// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// import Header from '../Header/Header';\n// // import CitiesList from '../CitiesList/CitiesList';\n// import Main from '../Main/Main';\n// import citiesApi from '../../utils/CitiesApi';\n// import CitiesList from '../CitiesList/CitiesList';\n\n// function App() {\n\n//   return (\n//     <div className=\"page\">\n//       <Header />\n//       <Main\n\n//       />\n//       {/* <CitiesList\n//       cities={cities}\n//       /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport './App.css';\n\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\n\nconst App = () => {\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import {SET_NETWORK} from \"../actions/actionTypes\";\nimport {ISetStationsAction, Network} from \"../reduxTypes\";\n\nconst initialState: Network = {\n  company: [],\n  location: {\n    city: '',\n    country: ''\n  },\n  stations: []\n}\n\nexport const stationReducer = (state = initialState, action: ISetStationsAction ) => {\n  const { type, payload } = action\n  switch (type) {\n    case SET_NETWORK: {\n      return { ...state, ...payload  }\n    }\n    default: return state\n  }\n}","import {combineReducers} from \"redux\";\nimport {stationReducer} from \"./stationReducer\";\n\n\nconst rootReducer = combineReducers({\n    network: stationReducer\n  }\n)\n\nexport default rootReducer\n\nexport type AppState = ReturnType<typeof rootReducer>;","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './components/App/App';\n// import { BrowserRouter } from 'react-router-dom';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <BrowserRouter>\n//     <App />\n//     </BrowserRouter>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport {applyMiddleware, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport './index.css'\nimport './vendor/normalize.css';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk, logger)\n)\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App/>\n  </Provider>,\ndocument.getElementById('root'));"],"sourceRoot":""}